stages:
  - test

services:
  - name: rabbitmq:4-management
    alias: rabbitmq
    command:
      - bash
      - -lc
      - |
        rabbitmq-plugins enable --offline \
          rabbitmq_stream \
          rabbitmq_stream_management \
          rabbitmq_shovel \
          rabbitmq_shovel_management \
        && rabbitmq-server

variables:
  RABBITMQ_DEFAULT_USER: user
  RABBITMQ_DEFAULT_PASS: password
  RABBITMQ_HOST: rabbitmq
  RUST_BACKTRACE: 1

test:
  stage: test
  image: rust:latest
  before_script:
    # install protoc if your build.rs needs it
    - |
      PROTOC_VERSION="31.1"
      PROTOC_ZIP="protoc-${PROTOC_VERSION}-linux-x86_64.zip"
      
      # Download protoc from GitHub releases
      curl -OL "https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/${PROTOC_ZIP}"
      
      # Extract the binary and includes
      unzip -o "${PROTOC_ZIP}" -d /usr/local bin/protoc
      unzip -o "${PROTOC_ZIP}" -d /usr/local include/*
      
      # Clean up and verify
      rm -f "${PROTOC_ZIP}"
      protoc --version
    - apt-get update && apt-get install -y curl
    # wait for rabbitmq mgmt API to be ready
    - |
      until curl -u "$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS" \
               -sSf http://$RABBITMQ_HOST:15672/api/healthchecks/node; do
        echo "Waiting for RabbitMQ..."
        sleep 5
      done
  script:
    - cargo test --verbose
